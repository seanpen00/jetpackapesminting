[{"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\index.js":"1","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\App.js":"2","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\reportWebVitals.js":"3","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\store.js":"4","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\styles\\globalStyles.js":"5","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataActions.js":"6","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js":"7","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js":"8","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataReducer.js":"9","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\index.js":"10","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\App.js":"11","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\reportWebVitals.js":"12","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\store.js":"13","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\styles\\globalStyles.js":"14","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataActions.js":"15","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js":"16","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js":"17","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataReducer.js":"18","E:\\SquidNFTGameMintingPage\\src\\index.js":"19","E:\\SquidNFTGameMintingPage\\src\\App.js":"20","E:\\SquidNFTGameMintingPage\\src\\reportWebVitals.js":"21","E:\\SquidNFTGameMintingPage\\src\\redux\\store.js":"22","E:\\SquidNFTGameMintingPage\\src\\styles\\globalStyles.js":"23","E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainActions.js":"24","E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataActions.js":"25","E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainReducer.js":"26","E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataReducer.js":"27","E:\\NikNames\\src\\index.js":"28","E:\\NikNames\\src\\App.js":"29","E:\\NikNames\\src\\reportWebVitals.js":"30","E:\\NikNames\\src\\redux\\store.js":"31","E:\\NikNames\\src\\styles\\globalStyles.js":"32","E:\\NikNames\\src\\redux\\data\\dataActions.js":"33","E:\\NikNames\\src\\redux\\blockchain\\blockchainActions.js":"34","E:\\NikNames\\src\\redux\\data\\dataReducer.js":"35","E:\\NikNames\\src\\redux\\blockchain\\blockchainReducer.js":"36","E:\\jetpackapesminting\\src\\index.js":"37","E:\\jetpackapesminting\\src\\reportWebVitals.js":"38","E:\\jetpackapesminting\\src\\App.js":"39","E:\\jetpackapesminting\\src\\redux\\store.js":"40","E:\\jetpackapesminting\\src\\styles\\globalStyles.js":"41","E:\\jetpackapesminting\\src\\redux\\data\\dataActions.js":"42","E:\\jetpackapesminting\\src\\redux\\blockchain\\blockchainActions.js":"43","E:\\jetpackapesminting\\src\\redux\\blockchain\\blockchainReducer.js":"44","E:\\jetpackapesminting\\src\\redux\\data\\dataReducer.js":"45"},{"size":629,"mtime":1632079558855,"results":"46","hashOfConfig":"47"},{"size":8537,"mtime":1632080320919,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1632079558871,"results":"49","hashOfConfig":"47"},{"size":579,"mtime":1632079558871,"results":"50","hashOfConfig":"47"},{"size":1870,"mtime":1631847793324,"results":"51","hashOfConfig":"47"},{"size":1124,"mtime":1632079558871,"results":"52","hashOfConfig":"47"},{"size":2396,"mtime":1632080224560,"results":"53","hashOfConfig":"47"},{"size":893,"mtime":1632079558871,"results":"54","hashOfConfig":"47"},{"size":867,"mtime":1632079558871,"results":"55","hashOfConfig":"47"},{"size":629,"mtime":1632079558855,"results":"56","hashOfConfig":"57"},{"size":14643,"mtime":1633754061240,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1632079558871,"results":"59","hashOfConfig":"57"},{"size":579,"mtime":1632079558871,"results":"60","hashOfConfig":"57"},{"size":1870,"mtime":1631847793324,"results":"61","hashOfConfig":"57"},{"size":1124,"mtime":1633472606164,"results":"62","hashOfConfig":"57"},{"size":2396,"mtime":1633747821337,"results":"63","hashOfConfig":"57"},{"size":893,"mtime":1632079558871,"results":"64","hashOfConfig":"57"},{"size":867,"mtime":1632079558871,"results":"65","hashOfConfig":"57"},{"size":629,"mtime":1632079558855,"results":"66","hashOfConfig":"67"},{"size":23351,"mtime":1634459904791,"results":"68","hashOfConfig":"67"},{"size":375,"mtime":1632079558871,"results":"69","hashOfConfig":"67"},{"size":579,"mtime":1632079558871,"results":"70","hashOfConfig":"67"},{"size":1870,"mtime":1634459043468,"results":"71","hashOfConfig":"67"},{"size":2396,"mtime":1634455531740,"results":"72","hashOfConfig":"67"},{"size":1124,"mtime":1633472606164,"results":"73","hashOfConfig":"67"},{"size":893,"mtime":1632079558871,"results":"74","hashOfConfig":"67"},{"size":867,"mtime":1632079558871,"results":"75","hashOfConfig":"67"},{"size":629,"mtime":1634712843296,"results":"76","hashOfConfig":"77"},{"size":23860,"mtime":1635137675516,"results":"78","hashOfConfig":"77"},{"size":375,"mtime":1634712843298,"results":"79","hashOfConfig":"77"},{"size":579,"mtime":1634712843298,"results":"80","hashOfConfig":"77"},{"size":1932,"mtime":1634793126807,"results":"81","hashOfConfig":"77"},{"size":1124,"mtime":1634712843297,"results":"82","hashOfConfig":"77"},{"size":2396,"mtime":1634826849422,"results":"83","hashOfConfig":"77"},{"size":867,"mtime":1634712843297,"results":"84","hashOfConfig":"77"},{"size":893,"mtime":1634712843297,"results":"85","hashOfConfig":"77"},{"size":629,"mtime":1634712843296,"results":"86","hashOfConfig":"87"},{"size":375,"mtime":1634712843298,"results":"88","hashOfConfig":"87"},{"size":24737,"mtime":1635193883122,"results":"89","hashOfConfig":"87"},{"size":579,"mtime":1634712843298,"results":"90","hashOfConfig":"87"},{"size":1932,"mtime":1634793126807,"results":"91","hashOfConfig":"87"},{"size":1124,"mtime":1634712843297,"results":"92","hashOfConfig":"87"},{"size":2396,"mtime":1635193791959,"results":"93","hashOfConfig":"87"},{"size":893,"mtime":1634712843297,"results":"94","hashOfConfig":"87"},{"size":867,"mtime":1634712843297,"results":"95","hashOfConfig":"87"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j9avcz",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mzg6ru",{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10rzqak",{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kz21rg",{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hdcais",{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\index.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\App.js",["192","193","194"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/1.gif\";\r\nimport newbanner from \"./assets/images/newbanner.png\"\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #000000;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 350px;\r\n    height: 350px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Launching your Doodlenaut into the Ether (minting Doodlenaut)...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      .send({\r\n        gasLimit: \"285000\",\r\n        to: \"0xAC065b23521297a6C94B482db6f574Ac7e8E4E31\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((.01 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"CONGRATS! Your Doodlenaut is officially in the Ether! go visit opensea.io to view it.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\r\n        <s.TextTitle\r\n          style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\", padding: 0, margin: 0, \r\n          borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n          borderRadius: 50  }}\r\n        >\r\n          {/* Doodlenaut Minter! */}\r\n          <StyledImg alt={\"example\"} \r\n          src={newbanner} \r\n          style={{width: 486/2, height: 207/2}}/>\r\n        </s.TextTitle>\r\n        <s.SpacerMedium />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{paddingTop: 0}}>\r\n            <StyledImg alt={\"example\"} src={i1} style={{paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 5,\r\n                    borderRadius: 20 }}/>\r\n            <s.SpacerMedium />\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\", borderStyle: \"solid\", borderColor: \"black\", \r\n              borderWidth: 5,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 50  }}\r\n            >\r\n              {data.totalSupply}/1000\r\n            </s.TextTitle>\r\n          </s.Container>\r\n          <s.SpacerMedium />\r\n          <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ backgroundColor: \"#c2c2c2\", padding: 24, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 5,\r\n                    borderRadius: 30 }}\r\n          >\r\n            {Number(data.totalSupply) == 1000 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Dont worry, you're not missing out! You can still Doodlenauts on{\" \"}\r\n                  <a\r\n                    // target={\"_blank\"}\r\n                    href={\"https://testnets.opensea.io/collection/rinkeby-doodlenauts\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                <s.SpacerMedium />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                      Connect to the Ethereum network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    <s.SpacerLarge />\r\n                    <s.TextDescription style={{textAlign: \"center\"}}>\r\n                      <a href=\"https://doodlenauts.io\">Doodlenauts Main Page</a>\r\n                    </s.TextDescription>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"BUY 1\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\r\n            Please make sure you are connected to the right network (Ethereum\r\n            Mainnet) and the correct address. Please note: Once you make the\r\n            purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\r\n            We have set the gas limit to 285000 for the contract to successfully\r\n            mint your NFT. We recommend that you don't change the gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\reportWebVitals.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\store.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\styles\\globalStyles.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js",["195"],"// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xAC065b23521297a6C94B482db6f574Ac7e8E4E31\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataReducer.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\index.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\App.js",["196","197","198","199","200","201"],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\reportWebVitals.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\store.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\styles\\globalStyles.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js",["202"],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataReducer.js",[],"E:\\SquidNFTGameMintingPage\\src\\index.js",[],"E:\\SquidNFTGameMintingPage\\src\\App.js",["203","204","205","206","207","208"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/mintkeeper.jpg\";\r\nimport silver from \"./assets/images/guard.PNG\";\r\nimport gold from \"./assets/images/question.PNG\";\r\nimport diamond from \"./assets/images/player.PNG\";\r\nimport newbanner from \"./assets/images/squidbanner.gif\"\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: solid;\r\n  background-color: black;\r\n  padding: 10px;\r\n  fontFamily: Staatliches, cursive;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  color: white;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px black;\r\n  -webkit-box-shadow: 0px 6px 0px -2px black;\r\n  -moz-box-shadow: 0px 6px 0px -2px black;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n    color: #white;\r\n  }\r\n  :hover {\r\n    transition-duration: .4s;\r\n    color: #02F702;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 300px;\r\n  height: 44px;\r\n  @media (min-width: 767px) {\r\n    width: 600px;\r\n    height: 80px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const claimNFTs = (_amount) => {\r\n    _amount = document.getElementById(\"inputBox\").value;\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Official OJINGEO...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      // ********\r\n      // You can change the line above to\r\n      // .whiteListMint(blockchain.account, _amount) if you want only whitelisted\r\n      // users to be able to mint through your website!\r\n      // And after you're done with whitelisted users buying from your website,\r\n      // You can switch it back to .mint(blockchain.account, _amount).\r\n      // ********\r\n      .send({\r\n        gasLimit: 285000 * _amount,\r\n        to: \"0xf65EbF7AcD21fDa6e350EE11CF19da2e257BC01e\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((0.045 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Check your transaction on Etherscan to find out what happened!\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"CONGRATS! Your OJINGEO successfully minted! Good luck, you're officially in the game. \"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\", fontSize: 40 }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24, backgroundColor: \"black\"}}>\r\n        <s.TextTitle\r\n          style={{ \r\n          display: \"flex\", \r\n          flexDirection: \"row\", \r\n          textAlign: \"left\", \r\n          fontSize: 40, \r\n          fontWeight: \"bold\", \r\n          paddingRight: 10, \r\n          margin: 0, \r\n          \r\n          borderStyle: \"solid\", \r\n          borderColor: \"white\", \r\n          borderWidth: 0,\r\n          paddingLeft: 30,\r\n          paddingRight: 30,\r\n          paddingTop: 30,\r\n          \r\n          borderRadius: 20, \r\n          textAlign: \"center\", \r\n          justifySelf: \"center\", \r\n          justifyContent: \"center\", \r\n          color:\"#7C3AED\", \r\n          background: \"black\",\r\n          }}\r\n        >\r\n          {/* Squid Game */}\r\n          <a href=\"https://google.com\"><StyledImg alt={\"Squid Game Logo\"} \r\n          src={newbanner} \r\n          style={{textAlign: \"center\"}}></StyledImg></a>\r\n        </s.TextTitle>\r\n        <s.SpacerMedium />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{paddingTop: 0, flexDirection: \"column\"}}>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 600,\r\n              fontSize: 25, \r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                 Squidverse is a collection of 10,000 Unique <bold style={{color: \"#ED1B76\"}}>guards</bold> / <bold style={{color: \"#249F9C\"}}> players </bold> who live on the Ethereum Blockchain. Risk Your\r\n                 lives and come play for the grand prize weekly. <br/>Who will be victorious....<br/>\r\n                 <text style={{fontSize: 40}}>the <bold style={{color: \"#ED1B76\"}}>guards</bold> or the\r\n                 <bold style={{color: \"#249F9C\"}}> players</bold>?</text> \r\n              </s.TextTitle>\r\n            {/* <a href=\"https://skulljunkiesnft.com/\"><StyledImg alt={\"Mintkeeper\"} src={i1} style={{paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n                    borderRadius: 0 }}/></a> */}\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 40, fontWeight: \"bold\", borderStyle: \"solid\", borderColor: \"white\", \r\n              borderWidth: 5,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 10,\r\n              paddingTop: 5,\r\n              paddingBottom: 5,\r\n              marginTop: 5,\r\n              marginBottom: 20,\r\n              background: \"black\",\r\n              color: \"white\",\r\n              }}\r\n            > Counter:<br/>\r\n              {blockchain.account == null ? \"   ?????\" : (\"   \" + data.totalSupply)}/10000\r\n            </s.TextTitle>\r\n            <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ \r\n              backgroundColor: \"black\", \r\n              padding: 24,\r\n              paddingTop: 20,\r\n              borderStyle: \"solid\", \r\n              borderColor: \"white\", \r\n              borderWidth: 0,\r\n              borderRadius: 20,\r\n              fontSize: 40,\r\n              maxWidth: 700,\r\n              maxHeight: 1500 }}\r\n          >\r\n            {Number(data.totalSupply) == 10000 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                {/* <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Dont worry, you're not missing out! You can still get OJINGEO on{\" \"}\r\n                  <a\r\n                    // target={\"_blank\"}\r\n                    href={\"https://testnets.opensea.io/collection/rinkeby-doodlenauts\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* <s.TextTitle style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 40, color: \"white\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                {/* <s.SpacerMedium /> */}\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription style={{ \r\n                      textAlign: \"center\", \r\n                      fontSize: 25, \r\n                      marginBottom: 0,\r\n                      color: \"white\",\r\n                      maxWidth: 600 }}>\r\n                    Each <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold> \r\n                    is a cute generative piece of artwork with a mix of ~x \r\n                    different traits. Your <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> players</bold> will be staked and used to play various\r\n                    squid games for weekly prize giveaways. the first game is about to be revealed,\r\n                    will you play the squid game?\r\n                    <s.SpacerSmall/>\r\n                    <s.SpacerSmall/>\r\n                      <div style={{flex: \"display\"}}>\r\n                        <StyledImg alt={\"silver\"} src={silver} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"silver\"} src={silver} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"gold\"} src={gold} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"diamond\"} src={diamond} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"diamond\"} src={diamond} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n\r\n                    </div>\r\n                    {/* <div style={{display: \"flex\", flexDirection: \"column\",\r\n                        borderStyle: \"solid\", \r\n                          borderColor: \"#D5B300\", \r\n                          borderWidth: 5,\r\n                          borderRadius: 10,\r\n                          backgroundColor: \"black\" }}>\r\n                      <bold style={{color: \"#C0C0C0\"}}>Silver:  5 / 10,000</bold> <br/>\r\n                      <bold style={{color: \"#D5B300\"}}>Gold:  3 / 10,000</bold> <br/>\r\n                      <bold style={{color: \"#B9F2FF\"}}>Diamond:  1 / 10,000</bold></div> */}\r\n                    </s.TextDescription>\r\n                    {/* <s.SpacerSmall /> */}\r\n                    {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 30, marginBottom: 0 }}>\r\n                      Connect to the Skulljunkies Minter!\r\n                    </s.TextDescription> */}\r\n                    {/* <s.SpacerSmall /> */}\r\n                    <StyledButton\r\n                      style={{\r\n                        fontFamily:\"'Staatliches', cursive;\",\r\n                        // background: \"black\",\r\n                        // color: \"white\",\r\n                        // borderStyle: \"solid\", \r\n                        // borderColor: \"#7C3AED\", \r\n                        borderWidth: 10,\r\n                        borderRadius: 90,\r\n                        fontSize: 60,\r\n                        marginTop: 30\r\n\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    <s.SpacerLarge />\r\n                    {/* <s.TextDescription style={{textAlign: \"center\", fontSize: 30, marginBottom: 0, paddingBottom: 0}}>\r\n                      <a href=\"https://google.com\">Boo Crew NFT Smart Contract</a>\r\n                    </s.TextDescription> */}\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\", fontSize: 50}}>\r\n                          <bold style={{color: \"white\"}}>{blockchain.errorMsg}</bold>\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{\r\n                    marginTop: 0, \r\n                    paddingTop: 0,\r\n                    color: \"white\"}}>\r\n                    <form>\r\n                    {/* I want  */}\r\n                    <input \r\n                    id=\"inputBox\"\r\n                    placeholder=\"#\" \r\n                    type=\"number\" \r\n                    min=\"1\" \r\n                    max=\"15\"\r\n                    style={{\r\n                      fontFamily: \"'Staatliches', cursive\",\r\n                      fontSize: 30,\r\n                      textAlign: \"center\",\r\n                      backgroundColor: \"black\",\r\n                      color: \"white\",\r\n                      borderWidth: 4,\r\n                      borderColor: \"white\",\r\n                      borderStyle: \"solid\",\r\n                      borderRadius: 100,\r\n                      paddingRight: 10,\r\n                      // marginBottom: 20,\r\n                      // paddingLeft: 0,\r\n                      // marginLeft: 0,\r\n                      width: 100,\r\n                      }}\r\n                    /> \r\n                    {/* Skulljunkies! */}\r\n                    </form>\r\n                    <s.SpacerSmall/>\r\n                    <StyledButton\r\n                     style={{fontFamily: \"'Staatliches', cursive;\", fontSize: 50}}\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> \r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   <text style={{fontSize: 50, color: \"#249F9C\"}}>25%</text> - You are in debt, how will you pay your bills?\r\n                   A mysterious man hands you a card with a phone number. Will you call it?\r\n                   <text style={{fontSize: 35, color: \"#249F9C\"}}> 10 lucky holders will receive a player airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#ED1B76\"}}>50%</text> - The guards have been preparing for your arrival. You have no idea\r\n                   what they have in store for you. \r\n                   <text style={{fontSize: 35, color: \"#ED1B76\"}}> 10 lucky holders recieve a guard airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#02FF02\"}}>100%</text> - The squid game begins! Which side are you on? The first\r\n                   game will be revealed. Pick your side and stake either your player or guard.\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>The winning team takes home the grand prize of 5% of the royalty revenue\r\n                   split amongst 5 players/guards randomly.</text>\r\n                 </text>\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> <bold style={{color: \"#ED1B76\", fontSize: 40}}>Cont.</bold>\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                 <text style={{fontSize: 35, color: \"#02FF02\"}}>Rarity Tools</text> - We will list the guards/players on rarity tools.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Community Funds</text> - We will deposit 5% of weekly royalty \r\n                   revenue into a community wallet to be disbursed to the winners of the games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Additional Games</text> - After the first game has concluded,\r\n                   will you continue playing and risking your life? There will be a total of 6 games. Pay your debts.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Raffles/Airdrops</text> - Have a chance of getting free airdrops and participate in our raffles. You owe so much money.\r\n                 </text>\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>F</bold>.<bold style={{color: \"#249F9C\"}}>A</bold>.<bold style={{color: \"#ED1B76\"}}>Q</bold>.\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   We won't tell you all of the rules. That'll ruin the fun. But here are some directions\r\n                   to get you to the squid games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I get a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I purchase a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How many <bold style={{color: \"#ED1B76\"}}>guards</bold> /<bold style={{color: \"#249F9C\"}}> players </bold> can I purchase?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     When will my <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold> be revealed?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How do I know if I will get a <bold style={{color: \"#ED1B76\"}}>guard</bold> or a <bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   \r\n                   \r\n                 </text>\r\n              </s.TextTitle>\r\n          </s.Container>\r\n          {/* <s.SpacerMedium /> */}\r\n          \r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 40}}>\r\n                      <a \r\n                      href=\"https://rinkeby.etherscan.io/address/0xf65EbF7AcD21fDa6e350EE11CF19da2e257BC01e\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"white\",\r\n                        fontSize: 20,\r\n                      }}\r\n                      >SquidverseNFT Smart Contract</a>\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 10, color: \"white\" }}>\r\n            asdf\r\n          </s.TextDescription> */}\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\SquidNFTGameMintingPage\\src\\reportWebVitals.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\store.js",[],"E:\\SquidNFTGameMintingPage\\src\\styles\\globalStyles.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainActions.js",["209"],"// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xf65EbF7AcD21fDa6e350EE11CF19da2e257BC01e\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataActions.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainReducer.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataReducer.js",[],"E:\\NikNames\\src\\index.js",[],"E:\\NikNames\\src\\App.js",["210","211","212","213"],"E:\\NikNames\\src\\reportWebVitals.js",[],"E:\\NikNames\\src\\redux\\store.js",[],"E:\\NikNames\\src\\styles\\globalStyles.js",[],"E:\\NikNames\\src\\redux\\data\\dataActions.js",[],"E:\\NikNames\\src\\redux\\blockchain\\blockchainActions.js",["214"],"E:\\NikNames\\src\\redux\\data\\dataReducer.js",[],"E:\\NikNames\\src\\redux\\blockchain\\blockchainReducer.js",[],"E:\\jetpackapesminting\\src\\index.js",[],"E:\\jetpackapesminting\\src\\reportWebVitals.js",[],"E:\\jetpackapesminting\\src\\App.js",["215","216","217","218"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/mintkeeper.jpg\";\r\nimport img1 from \"./assets/images/jp1.png\";\r\nimport img2 from \"./assets/images/jp2.png\";\r\nimport img3 from \"./assets/images/jp3.png\";\r\nimport img4 from \"./assets/images/jp4.png\";\r\nimport img5 from \"./assets/images/jp5.png\";\r\nimport img6 from \"./assets/images/jp6.png\";\r\nimport newbanner from \"./assets/images/mintingbanner3.jpeg\"\r\n\r\nexport const StyledButton = styled.button`\r\n  border-radius: 50px;\r\n  border: solid;\r\n  background-color: #AE64E5;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-shadow: 2px 2px 2px #000000;  \r\n  padding-left: 40px;\r\n\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  color: white;\r\n  cursor: pointer;\r\n  // box-shadow: 0px 6px 0px -2px black;\r\n  // -webkit-box-shadow: 0px 6px 0px -2px black;\r\n  // -moz-box-shadow: 0px 6px 0px -2px black;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n    color: #white;\r\n  }\r\n  :hover {\r\n    transition-duration: .4s;\r\n    color: blue;\r\n  }\r\n  @media (min-width: 767px) {\r\n    padding-left: 40px;\r\n    border-color: black;\r\n    text-shadow: 2px 2px 2px #000000;  \r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 403px;\r\n  height: 176.5px;\r\n  box-shadow:\r\n  0 0 60px 30px #fff,  /* inner white */\r\n  0 0 100px 60px #f0f, /* middle magenta */\r\n  0 0 140px 90px #0ff; /* outer cyan */\r\n  @media (min-width: 767px) {\r\n    width: 806px;\r\n    height: 337px;\r\n    box-shadow:\r\n    0 0 60px 30px #fff,  /* inner white */\r\n    0 0 100px 60px #f0f, /* middle magenta */\r\n    0 0 140px 90px #0ff; /* outer cyan */\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const claimNFTs = (_amount) => {\r\n    _amount = document.getElementById(\"inputBox\").value;\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Official Jetpack Ape(s)...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      // ********\r\n      // You can change the line above to\r\n      // .whiteListMint(blockchain.account, _amount) if you want only whitelisted\r\n      // users to be able to mint through your website!\r\n      // And after you're done with whitelisted users buying from your website,\r\n      // You can switch it back to .mint(blockchain.account, _amount).\r\n      // ********\r\n      .send({\r\n        gasLimit: 285000 * _amount,\r\n        to: \"0xe5cf8e64d3666aed8b7E73Bf42Bc034390CfD7B0\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((0.035 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Check your transaction on Etherscan to find out what happened!\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"CONGRATS! Your Jetpack Ape(s) successfully minted!\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\", fontSize: 40 }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 0, backgroundColor: \"#1C0C4D\", flexDirection: \"column\"}}>\r\n        <div style={{\r\n          display:\"flex\",\r\n          textAlign: \"left\", \r\n          justifySelf: \"left\", \r\n          justifyContent: \"left\",\r\n          }}>\r\n        <s.TextTitle style={{}}>\r\n        <a \r\n        style={{\r\n          textAlign: \"left\", \r\n          justifySelf: \"left\", \r\n          justifyContent: \"left\",\r\n          paddingLeft: 30,\r\n          paddingTop: 30,\r\n        }}\r\n        \r\n        href=\"https://opensea.io/\"><StyledImg alt={\"JetpackApe\"} \r\n          src={newbanner} \r\n          style={{textAlign: \"center\", marginTop: 100,\r\n          borderRadius: 30,\r\n          borderStyle: \"solid\",\r\n          borderWidth: 10,\r\n          borderColor: \"black\"\r\n          }}></StyledImg></a>\r\n          </s.TextTitle>\r\n          \r\n        </div>\r\n        <div style={{}}>\r\n          <span style={{}}>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 500,\r\n              fontSize: 50,\r\n              marginTop: 150,\r\n              paddingBottom: 0,\r\n              marginBottom: 0,\r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                  Mint your official <text style={{color: \"#EAB0FD\"}}>JetpackApe</text> today!\r\n              </s.TextTitle>\r\n              </span>\r\n              </div>\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{paddingTop: 0}}>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 1000,\r\n              fontSize: 30,\r\n              paddingBottom: 0, \r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                  {/* A <text style={{color: \"#94E8E8\"}}>Cryptic Key</text> is an NFT that is high in utility and extremity rare.\r\n                  These keys open arks which are digital treasure chests that have\r\n                  physical and digital prizes. They also act as tickets to our\r\n                  upcoming YouTube videos, podcasts, events and more. \r\n                  Each key is a 1 of 1 masterpiece, so get yours before \r\n                  they’re gone!<br/><text style={{color: \"#94E8E8\", fontSize: 40}}>999 keys are available for pre sale! </text> */}\r\n                   <StyledImg alt={\"img1\"} src={img1} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                            <StyledImg alt={\"img1\"} src={img2} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                           <StyledImg alt={\"img1\"} src={img3} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n\r\n              </s.TextTitle>\r\n            {/* <a href=\"https://skulljunkiesnft.com/\"><StyledImg alt={\"Mintkeeper\"} src={i1} style={{paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n                    borderRadius: 0 }}/></a> */}\r\n                    <div>\r\n            <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ \r\n              flexDirection: \"column\",\r\n              backgroundColor: \"#AE64E5\", \r\n              padding: 24,\r\n              paddingTop: 0,\r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\", \r\n              borderWidth: 10,\r\n              borderRadius: 10,\r\n              fontSize: 40,\r\n              maxWidth: 400,\r\n              marginTop: 0,\r\n              maxHeight: 1500, }}\r\n          >\r\n            {Number(data.totalSupply) == 999 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                {/* <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Dont worry, you're not missing out! You can still get Cryptic Keys on{\" \"}\r\n                  <a\r\n                    // target={\"_blank\"}\r\n                    href={\"https://opensea.io/collection/cryptic-keys\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* <s.TextTitle style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 20, color: \"white\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                {/* <s.SpacerMedium /> */}\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} style={{\r\n                  }}>\r\n                    <StyledButton\r\n                      style={{\r\n                        fontFamily:\"coder\", \r\n                        borderWidth: 0,\r\n                        borderStyle: \"solid\",\r\n                        borderColor: \"purple\",\r\n                        fontSize: 40,\r\n\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\", fontSize: 20}}>\r\n                          <bold style={{color: \"white\"}}>{blockchain.errorMsg}</bold>\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                    <s.SpacerSmall/>\r\n                      Mint Now\r\n                    </StyledButton>\r\n                    <s.SpacerLarge />\r\n                    {/* <s.TextDescription style={{textAlign: \"center\", fontSize: 30, marginBottom: 0, paddingBottom: 0}}>\r\n                      <a href=\"https://google.com\">Boo Crew NFT Smart Contract</a>\r\n                    </s.TextDescription> */}\r\n                    {/* {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\", fontSize: 20}}>\r\n                          <bold style={{color: \"white\"}}>{blockchain.errorMsg}</bold>\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null} */}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{\r\n                    marginTop: 0, \r\n                    paddingTop: 0,\r\n                    color: \"white\"}}>\r\n                    <form>\r\n                    {/* I want  */}\r\n                    <input \r\n                    id=\"inputBox\"\r\n                    placeholder=\"#\" \r\n                    type=\"number\" \r\n                    min=\"1\" \r\n                    max=\"5\"\r\n                    style={{\r\n                      \r\n                      fontSize: 30,\r\n                      textAlign: \"center\",\r\n                      backgroundColor: \"black\",\r\n                      color: \"#AF64E5\",\r\n                      borderWidth: 4,\r\n                      borderColor: \"black\",\r\n                      borderStyle: \"solid\",\r\n                      borderRadius: 100,\r\n                      paddingRight: 10,\r\n                      // marginBottom: 20,\r\n                      // paddingLeft: 0,\r\n                      // marginLeft: 0,\r\n                      width: 100,\r\n                      }}\r\n                    /> \r\n                    {/* Skulljunkies! */}\r\n                    </form>\r\n                    <s.SpacerSmall/>\r\n                    <StyledButton\r\n                     style={{fontFamily: \"'Roboto', sans-serif;\", fontSize: 50, marginTop: 20, paddingRight: 40}}\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n          <s.SpacerSmall/>\r\n            {/* <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 40, fontWeight: \"bold\", borderStyle: \"solid\", borderColor: \"white\", \r\n              borderWidth: 10,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 0,\r\n              paddingBottom: 21,\r\n              paddingTop: 22,\r\n              marginTop: 18,\r\n              marginBottom: 20,\r\n              background: \"black\",\r\n              color: \"white\",\r\n              }}\r\n            > \r\n              {blockchain.account == null ? \"   ???\" : (\"   \" + data.totalSupply)}/999 <br/>\r\n              Keys Sold\r\n            </s.TextTitle> */}\r\n            </div>\r\n            <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 1000,\r\n              fontSize: 30,\r\n              paddingBottom: 0, \r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                  {/* A <text style={{color: \"#94E8E8\"}}>Cryptic Key</text> is an NFT that is high in utility and extremity rare.\r\n                  These keys open arks which are digital treasure chests that have\r\n                  physical and digital prizes. They also act as tickets to our\r\n                  upcoming YouTube videos, podcasts, events and more. \r\n                  Each key is a 1 of 1 masterpiece, so get yours before \r\n                  they’re gone!<br/><text style={{color: \"#94E8E8\", fontSize: 40}}>999 keys are available for pre sale! </text> */}\r\n                   <StyledImg alt={\"img1\"} src={img4} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                            <StyledImg alt={\"img1\"} src={img5} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                           <StyledImg alt={\"img1\"} src={img6} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n\r\n              </s.TextTitle>\r\n            \r\n          {/* <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> \r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   <text style={{fontSize: 50, color: \"#249F9C\"}}>25%</text> - You are in debt, how will you pay your bills?\r\n                   A mysterious man hands you a card with a phone number. Will you call it?\r\n                   <text style={{fontSize: 35, color: \"#249F9C\"}}> 10 lucky holders will receive a player airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#ED1B76\"}}>50%</text> - The guards have been preparing for your arrival. You have no idea\r\n                   what they have in store for you. \r\n                   <text style={{fontSize: 35, color: \"#ED1B76\"}}> 10 lucky holders recieve a guard airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#02FF02\"}}>100%</text> - The squid game begins! Which side are you on? The first\r\n                   game will be revealed. Pick your side and stake either your player or guard.\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>The winning team takes home the grand prize of 5% of the royalty revenue\r\n                   split amongst 5 players/guards randomly.</text>\r\n                 </text>\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> <bold style={{color: \"#ED1B76\", fontSize: 40}}>Cont.</bold>\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                 <text style={{fontSize: 35, color: \"#02FF02\"}}>Rarity Tools</text> - We will list the guards/players on rarity tools.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Community Funds</text> - We will deposit 5% of weekly royalty \r\n                   revenue into a community wallet to be disbursed to the winners of the games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Additional Games</text> - After the first game has concluded,\r\n                   will you continue playing and risking your life? There will be a total of 6 games. Pay your debts.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Raffles/Airdrops</text> - Have a chance of getting free airdrops and participate in our raffles. You owe so much money.\r\n                 </text>\r\n              </s.TextTitle> */}\r\n              {/* <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>F</bold>.<bold style={{color: \"#249F9C\"}}>A</bold>.<bold style={{color: \"#ED1B76\"}}>Q</bold>.\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   We won't tell you all of the rules. That'll ruin the fun. But here are some directions\r\n                   to get you to the squid games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I get a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I purchase a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How many <bold style={{color: \"#ED1B76\"}}>guards</bold> /<bold style={{color: \"#249F9C\"}}> players </bold> can I purchase?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     When will my <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold> be revealed?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How do I know if I will get a <bold style={{color: \"#ED1B76\"}}>guard</bold> or a <bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   \r\n                   \r\n                 </text>\r\n              </s.TextTitle> */}\r\n          </s.Container>\r\n          {/* <s.SpacerMedium /> */}\r\n          \r\n        </ResponsiveWrapper>\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 40}}>\r\n                      <a \r\n                      href=\"https://rinkeby.etherscan.io/address/0xe5cf8e64d3666aed8b7E73Bf42Bc034390CfD7B0\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"lightblue\",\r\n                        fontSize: 40,\r\n                      }}\r\n                      >JPA Smart Contract </a> <text style={{color: \"white\"}}></text>\r\n          </s.TextDescription>\r\n          \r\n          {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 10, color: \"white\" }}>\r\n            asdf\r\n          </s.TextDescription> */}\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\jetpackapesminting\\src\\redux\\store.js",[],"E:\\jetpackapesminting\\src\\styles\\globalStyles.js",[],"E:\\jetpackapesminting\\src\\redux\\data\\dataActions.js",[],"E:\\jetpackapesminting\\src\\redux\\blockchain\\blockchainActions.js",["219"],"// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xe5cf8e64d3666aed8b7E73Bf42Bc034390CfD7B0\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","E:\\jetpackapesminting\\src\\redux\\blockchain\\blockchainReducer.js",[],"E:\\jetpackapesminting\\src\\redux\\data\\dataReducer.js",[],{"ruleId":"220","severity":1,"message":"221","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":44},{"ruleId":"224","severity":1,"message":"225","line":96,"column":6,"nodeType":"226","endLine":96,"endColumn":26,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":135,"column":39,"nodeType":"230","messageId":"231","endLine":135,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":51,"column":23,"nodeType":"230","messageId":"231","endLine":51,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":44},{"ruleId":"220","severity":1,"message":"232","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":17},{"ruleId":"224","severity":1,"message":"225","line":113,"column":6,"nodeType":"226","endLine":113,"endColumn":26,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":132,"column":11,"nodeType":"236","messageId":"231","endLine":132,"endColumn":23},{"ruleId":"234","severity":1,"message":"237","line":135,"column":11,"nodeType":"236","messageId":"231","endLine":135,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":189,"column":39,"nodeType":"230","messageId":"231","endLine":189,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":51,"column":23,"nodeType":"230","messageId":"231","endLine":51,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":44},{"ruleId":"220","severity":1,"message":"238","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":10},{"ruleId":"224","severity":1,"message":"225","line":114,"column":6,"nodeType":"226","endLine":114,"endColumn":26,"suggestions":"239"},{"ruleId":"234","severity":1,"message":"235","line":133,"column":11,"nodeType":"236","messageId":"231","endLine":133,"endColumn":23},{"ruleId":"234","severity":1,"message":"237","line":137,"column":11,"nodeType":"236","messageId":"231","endLine":137,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":200,"column":39,"nodeType":"230","messageId":"231","endLine":200,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":51,"column":23,"nodeType":"230","messageId":"231","endLine":51,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":44},{"ruleId":"220","severity":1,"message":"238","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":10},{"ruleId":"224","severity":1,"message":"225","line":119,"column":6,"nodeType":"226","endLine":119,"endColumn":26,"suggestions":"240"},{"ruleId":"228","severity":1,"message":"229","line":239,"column":39,"nodeType":"230","messageId":"231","endLine":239,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":51,"column":23,"nodeType":"230","messageId":"231","endLine":51,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":44},{"ruleId":"220","severity":1,"message":"238","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":10},{"ruleId":"224","severity":1,"message":"225","line":130,"column":6,"nodeType":"226","endLine":130,"endColumn":26,"suggestions":"241"},{"ruleId":"228","severity":1,"message":"229","line":257,"column":39,"nodeType":"230","messageId":"231","endLine":257,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":51,"column":23,"nodeType":"230","messageId":"231","endLine":51,"endColumn":25},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["242"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newbanner' is defined but never used.",["243"],"no-dupe-keys","Duplicate key 'paddingRight'.","ObjectExpression","Duplicate key 'textAlign'.","'i1' is defined but never used.",["244"],["245"],["246"],{"desc":"247","fix":"248"},{"desc":"247","fix":"249"},{"desc":"247","fix":"250"},{"desc":"247","fix":"251"},{"desc":"247","fix":"252"},"Update the dependencies array to be: [blockchain.account, getData]",{"range":"253","text":"254"},{"range":"255","text":"254"},{"range":"256","text":"254"},{"range":"257","text":"254"},{"range":"258","text":"254"},[2856,2876],"[blockchain.account, getData]",[3586,3606],[3554,3574],[3664,3684],[4068,4088]]
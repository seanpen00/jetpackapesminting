{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/jp1.png","assets/images/mintkeeper.jpg","assets/images/jp2.png","assets/images/jp3.png","assets/images/jp4.png","assets/images/jp5.png","assets/images/jp6.png","assets/images/mintingbanner3.jpeg","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledImg","img","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","getData","useEffect","style","backgroundColor","fontSize","padding","flexDirection","display","textAlign","justifySelf","justifyContent","paddingLeft","paddingTop","href","alt","src","newbanner","marginTop","borderRadius","borderStyle","borderWidth","borderColor","color","maxWidth","paddingBottom","marginBottom","fontWeight","img1","height","width","margin","boxShadow","img2","img3","maxHeight","Number","fontFamily","onClick","e","preventDefault","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContract","on","location","reload","id","placeholder","min","max","paddingRight","disabled","_amount","document","getElementById","value","mint","send","gasLimit","to","from","utils","toWei","toString","once","err","then","receipt","img4","img5","img6","textDecoration","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.70f02511.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xe5cf8e64d3666aed8b7E73Bf42Bc034390CfD7B0\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/jp1.85f2fa4d.png\";","export default __webpack_public_path__ + \"static/media/mintkeeper.8110fbd5.jpg\";","export default __webpack_public_path__ + \"static/media/jp2.906a010a.png\";","export default __webpack_public_path__ + \"static/media/jp3.733a8b19.png\";","export default __webpack_public_path__ + \"static/media/jp4.7985322a.png\";","export default __webpack_public_path__ + \"static/media/jp5.414879fb.png\";","export default __webpack_public_path__ + \"static/media/jp6.7d53c55b.png\";","export default __webpack_public_path__ + \"static/media/mintingbanner3.f3b03a9d.jpeg\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/mintkeeper.jpg\";\r\nimport img1 from \"./assets/images/jp1.png\";\r\nimport img2 from \"./assets/images/jp2.png\";\r\nimport img3 from \"./assets/images/jp3.png\";\r\nimport img4 from \"./assets/images/jp4.png\";\r\nimport img5 from \"./assets/images/jp5.png\";\r\nimport img6 from \"./assets/images/jp6.png\";\r\nimport newbanner from \"./assets/images/mintingbanner3.jpeg\"\r\n\r\nexport const StyledButton = styled.button`\r\n  border-radius: 50px;\r\n  border: solid;\r\n  background-color: #AE64E5;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-shadow: 2px 2px 2px #000000;  \r\n  padding-left: 40px;\r\n\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  color: white;\r\n  cursor: pointer;\r\n  // box-shadow: 0px 6px 0px -2px black;\r\n  // -webkit-box-shadow: 0px 6px 0px -2px black;\r\n  // -moz-box-shadow: 0px 6px 0px -2px black;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n    color: #white;\r\n  }\r\n  :hover {\r\n    transition-duration: .4s;\r\n    color: blue;\r\n  }\r\n  @media (min-width: 767px) {\r\n    padding-left: 40px;\r\n    border-color: black;\r\n    text-shadow: 2px 2px 2px #000000;  \r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 403px;\r\n  height: 176.5px;\r\n  box-shadow:\r\n  0 0 60px 30px #fff,  /* inner white */\r\n  0 0 100px 60px #f0f, /* middle magenta */\r\n  0 0 140px 90px #0ff; /* outer cyan */\r\n  @media (min-width: 767px) {\r\n    width: 806px;\r\n    height: 337px;\r\n    box-shadow:\r\n    0 0 60px 30px #fff,  /* inner white */\r\n    0 0 100px 60px #f0f, /* middle magenta */\r\n    0 0 140px 90px #0ff; /* outer cyan */\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const claimNFTs = (_amount) => {\r\n    _amount = document.getElementById(\"inputBox\").value;\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Official Jetpack Ape(s)...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      // ********\r\n      // You can change the line above to\r\n      // .whiteListMint(blockchain.account, _amount) if you want only whitelisted\r\n      // users to be able to mint through your website!\r\n      // And after you're done with whitelisted users buying from your website,\r\n      // You can switch it back to .mint(blockchain.account, _amount).\r\n      // ********\r\n      .send({\r\n        gasLimit: 285000 * _amount,\r\n        to: \"0xe5cf8e64d3666aed8b7E73Bf42Bc034390CfD7B0\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((0.035 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Check your transaction on Etherscan to find out what happened!\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"CONGRATS! Your Jetpack Ape(s) successfully minted!\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\", fontSize: 40 }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 0, backgroundColor: \"#1C0C4D\", flexDirection: \"column\"}}>\r\n        <div style={{\r\n          display:\"flex\",\r\n          textAlign: \"left\", \r\n          justifySelf: \"left\", \r\n          justifyContent: \"left\",\r\n          }}>\r\n        <s.TextTitle style={{}}>\r\n        <a \r\n        style={{\r\n          textAlign: \"left\", \r\n          justifySelf: \"left\", \r\n          justifyContent: \"left\",\r\n          paddingLeft: 30,\r\n          paddingTop: 30,\r\n        }}\r\n        \r\n        href=\"https://opensea.io/\"><StyledImg alt={\"JetpackApe\"} \r\n          src={newbanner} \r\n          style={{textAlign: \"center\", marginTop: 100,\r\n          borderRadius: 30,\r\n          borderStyle: \"solid\",\r\n          borderWidth: 10,\r\n          borderColor: \"black\"\r\n          }}></StyledImg></a>\r\n          </s.TextTitle>\r\n          \r\n        </div>\r\n        <div style={{}}>\r\n          <span style={{}}>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 500,\r\n              fontSize: 50,\r\n              marginTop: 150,\r\n              paddingBottom: 0,\r\n              marginBottom: 0,\r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                  Mint your official <text style={{color: \"#EAB0FD\"}}>JetpackApe</text> today!\r\n              </s.TextTitle>\r\n              </span>\r\n              </div>\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{paddingTop: 0}}>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 1000,\r\n              fontSize: 30,\r\n              paddingBottom: 0, \r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                  {/* A <text style={{color: \"#94E8E8\"}}>Cryptic Key</text> is an NFT that is high in utility and extremity rare.\r\n                  These keys open arks which are digital treasure chests that have\r\n                  physical and digital prizes. They also act as tickets to our\r\n                  upcoming YouTube videos, podcasts, events and more. \r\n                  Each key is a 1 of 1 masterpiece, so get yours before \r\n                  they’re gone!<br/><text style={{color: \"#94E8E8\", fontSize: 40}}>999 keys are available for pre sale! </text> */}\r\n                   <StyledImg alt={\"img1\"} src={img1} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                            <StyledImg alt={\"img1\"} src={img2} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                           <StyledImg alt={\"img1\"} src={img3} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n\r\n              </s.TextTitle>\r\n            {/* <a href=\"https://skulljunkiesnft.com/\"><StyledImg alt={\"Mintkeeper\"} src={i1} style={{paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n                    borderRadius: 0 }}/></a> */}\r\n                    <div>\r\n            <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ \r\n              flexDirection: \"column\",\r\n              backgroundColor: \"#AE64E5\", \r\n              padding: 24,\r\n              paddingTop: 0,\r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\", \r\n              borderWidth: 10,\r\n              borderRadius: 10,\r\n              fontSize: 40,\r\n              maxWidth: 400,\r\n              marginTop: 0,\r\n              maxHeight: 1500, }}\r\n          >\r\n            {Number(data.totalSupply) == 999 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                {/* <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Dont worry, you're not missing out! You can still get Cryptic Keys on{\" \"}\r\n                  <a\r\n                    // target={\"_blank\"}\r\n                    href={\"https://opensea.io/collection/cryptic-keys\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* <s.TextTitle style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 20, color: \"white\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                {/* <s.SpacerMedium /> */}\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} style={{\r\n                  }}>\r\n                    <StyledButton\r\n                      style={{\r\n                        fontFamily:\"coder\", \r\n                        borderWidth: 0,\r\n                        borderStyle: \"solid\",\r\n                        borderColor: \"purple\",\r\n                        fontSize: 40,\r\n\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\", fontSize: 20}}>\r\n                          <bold style={{color: \"white\"}}>{blockchain.errorMsg}</bold>\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                    <s.SpacerSmall/>\r\n                      Mint Now\r\n                    </StyledButton>\r\n                    <s.SpacerLarge />\r\n                    {/* <s.TextDescription style={{textAlign: \"center\", fontSize: 30, marginBottom: 0, paddingBottom: 0}}>\r\n                      <a href=\"https://google.com\">Boo Crew NFT Smart Contract</a>\r\n                    </s.TextDescription> */}\r\n                    {/* {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\", fontSize: 20}}>\r\n                          <bold style={{color: \"white\"}}>{blockchain.errorMsg}</bold>\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null} */}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{\r\n                    marginTop: 0, \r\n                    paddingTop: 0,\r\n                    color: \"white\"}}>\r\n                    <form>\r\n                    {/* I want  */}\r\n                    <input \r\n                    id=\"inputBox\"\r\n                    placeholder=\"#\" \r\n                    type=\"number\" \r\n                    min=\"1\" \r\n                    max=\"5\"\r\n                    style={{\r\n                      \r\n                      fontSize: 30,\r\n                      textAlign: \"center\",\r\n                      backgroundColor: \"black\",\r\n                      color: \"#AF64E5\",\r\n                      borderWidth: 4,\r\n                      borderColor: \"black\",\r\n                      borderStyle: \"solid\",\r\n                      borderRadius: 100,\r\n                      paddingRight: 10,\r\n                      // marginBottom: 20,\r\n                      // paddingLeft: 0,\r\n                      // marginLeft: 0,\r\n                      width: 100,\r\n                      }}\r\n                    /> \r\n                    {/* Skulljunkies! */}\r\n                    </form>\r\n                    <s.SpacerSmall/>\r\n                    <StyledButton\r\n                     style={{fontFamily: \"'Roboto', sans-serif;\", fontSize: 50, marginTop: 20, paddingRight: 40}}\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n          <s.SpacerSmall/>\r\n            {/* <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 40, fontWeight: \"bold\", borderStyle: \"solid\", borderColor: \"white\", \r\n              borderWidth: 10,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 0,\r\n              paddingBottom: 21,\r\n              paddingTop: 22,\r\n              marginTop: 18,\r\n              marginBottom: 20,\r\n              background: \"black\",\r\n              color: \"white\",\r\n              }}\r\n            > \r\n              {blockchain.account == null ? \"   ???\" : (\"   \" + data.totalSupply)}/999 <br/>\r\n              Keys Sold\r\n            </s.TextTitle> */}\r\n            </div>\r\n            <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 1000,\r\n              fontSize: 30,\r\n              paddingBottom: 0, \r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                  {/* A <text style={{color: \"#94E8E8\"}}>Cryptic Key</text> is an NFT that is high in utility and extremity rare.\r\n                  These keys open arks which are digital treasure chests that have\r\n                  physical and digital prizes. They also act as tickets to our\r\n                  upcoming YouTube videos, podcasts, events and more. \r\n                  Each key is a 1 of 1 masterpiece, so get yours before \r\n                  they’re gone!<br/><text style={{color: \"#94E8E8\", fontSize: 40}}>999 keys are available for pre sale! </text> */}\r\n                   <StyledImg alt={\"img1\"} src={img4} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                            <StyledImg alt={\"img1\"} src={img5} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n                           <StyledImg alt={\"img1\"} src={img6} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          // borderStyle: \"solid\", \r\n                          // borderColor: \"black\", \r\n                          // borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 235,\r\n                          width: 195,\r\n                          margin: \"2px\",\r\n                          boxShadow: \"none\"\r\n                           }}/>\r\n\r\n              </s.TextTitle>\r\n            \r\n          {/* <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> \r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   <text style={{fontSize: 50, color: \"#249F9C\"}}>25%</text> - You are in debt, how will you pay your bills?\r\n                   A mysterious man hands you a card with a phone number. Will you call it?\r\n                   <text style={{fontSize: 35, color: \"#249F9C\"}}> 10 lucky holders will receive a player airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#ED1B76\"}}>50%</text> - The guards have been preparing for your arrival. You have no idea\r\n                   what they have in store for you. \r\n                   <text style={{fontSize: 35, color: \"#ED1B76\"}}> 10 lucky holders recieve a guard airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#02FF02\"}}>100%</text> - The squid game begins! Which side are you on? The first\r\n                   game will be revealed. Pick your side and stake either your player or guard.\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>The winning team takes home the grand prize of 5% of the royalty revenue\r\n                   split amongst 5 players/guards randomly.</text>\r\n                 </text>\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> <bold style={{color: \"#ED1B76\", fontSize: 40}}>Cont.</bold>\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                 <text style={{fontSize: 35, color: \"#02FF02\"}}>Rarity Tools</text> - We will list the guards/players on rarity tools.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Community Funds</text> - We will deposit 5% of weekly royalty \r\n                   revenue into a community wallet to be disbursed to the winners of the games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Additional Games</text> - After the first game has concluded,\r\n                   will you continue playing and risking your life? There will be a total of 6 games. Pay your debts.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Raffles/Airdrops</text> - Have a chance of getting free airdrops and participate in our raffles. You owe so much money.\r\n                 </text>\r\n              </s.TextTitle> */}\r\n              {/* <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>F</bold>.<bold style={{color: \"#249F9C\"}}>A</bold>.<bold style={{color: \"#ED1B76\"}}>Q</bold>.\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   We won't tell you all of the rules. That'll ruin the fun. But here are some directions\r\n                   to get you to the squid games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I get a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I purchase a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How many <bold style={{color: \"#ED1B76\"}}>guards</bold> /<bold style={{color: \"#249F9C\"}}> players </bold> can I purchase?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     When will my <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold> be revealed?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How do I know if I will get a <bold style={{color: \"#ED1B76\"}}>guard</bold> or a <bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   \r\n                   \r\n                 </text>\r\n              </s.TextTitle> */}\r\n          </s.Container>\r\n          {/* <s.SpacerMedium /> */}\r\n          \r\n        </ResponsiveWrapper>\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 40}}>\r\n                      <a \r\n                      href=\"https://rinkeby.etherscan.io/address/0xe5cf8e64d3666aed8b7E73Bf42Bc034390CfD7B0\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"lightblue\",\r\n                        fontSize: 40,\r\n                      }}\r\n                      >JPA Smart Contract </a> <text style={{color: \"white\"}}></text>\r\n          </s.TextDescription>\r\n          \r\n          {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 10, color: \"white\" }}>\r\n            asdf\r\n          </s.TextDescription> */}\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}